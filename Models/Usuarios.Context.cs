//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceHogarApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_ServiceHogarEntities : DbContext
    {
        public DB_ServiceHogarEntities()
            : base("name=DB_ServiceHogarEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TB_Calificaciones> TB_Calificaciones { get; set; }
        public virtual DbSet<TB_Profesionales> TB_Profesionales { get; set; }
        public virtual DbSet<TB_Servicios> TB_Servicios { get; set; }
        public virtual DbSet<TB_Usuarios> TB_Usuarios { get; set; }
    
        public virtual int SP_REGISTRAR_PROFESIONAL(string tIPO, string nOMBRE, string aPELLIDO, string dNI, string uSUARIO, string cLAVE, string sEXO, Nullable<System.DateTime> fECHANAC, string dISTRITO, string eSPECIALIDAD, string dESCRIPCIÓN, string cV, Nullable<int> pROMEDIOCA)
        {
            var tIPOParameter = tIPO != null ?
                new ObjectParameter("TIPO", tIPO) :
                new ObjectParameter("TIPO", typeof(string));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var aPELLIDOParameter = aPELLIDO != null ?
                new ObjectParameter("APELLIDO", aPELLIDO) :
                new ObjectParameter("APELLIDO", typeof(string));
    
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var cLAVEParameter = cLAVE != null ?
                new ObjectParameter("CLAVE", cLAVE) :
                new ObjectParameter("CLAVE", typeof(string));
    
            var sEXOParameter = sEXO != null ?
                new ObjectParameter("SEXO", sEXO) :
                new ObjectParameter("SEXO", typeof(string));
    
            var fECHANACParameter = fECHANAC.HasValue ?
                new ObjectParameter("FECHANAC", fECHANAC) :
                new ObjectParameter("FECHANAC", typeof(System.DateTime));
    
            var dISTRITOParameter = dISTRITO != null ?
                new ObjectParameter("DISTRITO", dISTRITO) :
                new ObjectParameter("DISTRITO", typeof(string));
    
            var eSPECIALIDADParameter = eSPECIALIDAD != null ?
                new ObjectParameter("ESPECIALIDAD", eSPECIALIDAD) :
                new ObjectParameter("ESPECIALIDAD", typeof(string));
    
            var dESCRIPCIÓNParameter = dESCRIPCIÓN != null ?
                new ObjectParameter("DESCRIPCIÓN", dESCRIPCIÓN) :
                new ObjectParameter("DESCRIPCIÓN", typeof(string));
    
            var cVParameter = cV != null ?
                new ObjectParameter("CV", cV) :
                new ObjectParameter("CV", typeof(string));
    
            var pROMEDIOCAParameter = pROMEDIOCA.HasValue ?
                new ObjectParameter("PROMEDIOCA", pROMEDIOCA) :
                new ObjectParameter("PROMEDIOCA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REGISTRAR_PROFESIONAL", tIPOParameter, nOMBREParameter, aPELLIDOParameter, dNIParameter, uSUARIOParameter, cLAVEParameter, sEXOParameter, fECHANACParameter, dISTRITOParameter, eSPECIALIDADParameter, dESCRIPCIÓNParameter, cVParameter, pROMEDIOCAParameter);
        }
    }
}
